// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(e){"use strict";var t,r="function"==typeof Object.defineProperty?Object.defineProperty:null,n=Object.defineProperty,o=Object.prototype,a=o.toString,i=o.__defineGetter__,u=o.__defineSetter__,l=o.__lookupGetter__,c=o.__lookupSetter__;function f(e,t){return e[t]}function s(e,t){return e.get(t)}function d(e,t,r){e[t]=r}function _(e,t,r){e.set(r,t)}function p(e){var t=Boolean(e.get&&e.set);return{data:e,accessors:t,getter:t?s:f,setter:t?_:d}}function y(e,t,r,n,o,a){var i,u,l,c,f;for(i=t.data,l=t.getter,u=t.setter,c=n,f=0;f<e;f++)u(i,c,o.call(a,l(i,c),f,c,t)),c+=r;return t}function b(e,t,r,n,o){var a,i,u;if(e<=0)return t;if(a=r<0?(1-e)*r:0,(i=p(t)).accessors)return y(e,i,r,a,n,o),i.data;for(u=0;u<e;u++)t[a]=n.call(o,t[a],u,a,t),a+=r;return t}function v(e,t,r,n,o,a){var i,u,l;if(e<=0)return t;if((u=p(t)).accessors)return y(e,u,r,n,o,a),u.data;for(i=n,l=0;l<e;l++)t[i]=o.call(a,t[i],l,i,t),i+=r;return t}t=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?n:function(e,t,r){var n,f,s,d;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===a.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(l.call(e,t)||c.call(e,t)?(n=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=n):e[t]=r.value),s="get"in r,d="set"in r,f&&(s||d))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return s&&i&&i.call(e,t,r.get),d&&u&&u.call(e,t,r.set),e},t(b,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:v}),e.default=b,e.ndarray=v,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).gfillBy={});
//# sourceMappingURL=browser.js.map
