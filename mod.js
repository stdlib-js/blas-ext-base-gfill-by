// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,a=n.toString,o=n.__defineGetter__,u=n.__defineSetter__,c=n.__lookupGetter__,i=n.__lookupSetter__;var l=t,f=function(e,r,t){var l,f,_,s;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(c.call(e,r)||i.call(e,r)?(l=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=l):e[r]=t.value),_="get"in t,s="set"in t,f&&(_||s))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(e,r,t.get),s&&u&&u.call(e,r,t.set),e},_=r()?l:f;var s=function(e,r){return e[r]},p=function(e,r){return e.get(r)},v=function(e,r,t){e[r]=t},d=function(e,r,t){e.set(t,r)};var b=function(e){var r=Boolean(e.get&&e.set);return{data:e,accessors:r,getter:r?p:s,setter:r?d:v}};var y=function(e,r,t,n,a,o){var u,c,i,l,f;for(u=r.data,i=r.getter,c=r.setter,l=n,f=0;f<e;f++)c(u,l,a.call(o,i(u,l),f,l,r)),l+=t;return r},g=b,j=y;var m=b,w=y;var h=function(e,r,t,n,a){var o,u,c;if(e<=0)return r;if(o=t<0?(1-e)*t:0,(u=g(r)).accessors)return j(e,u,t,o,n,a),u.data;for(c=0;c<e;c++)r[o]=n.call(a,r[o],c,o,r),o+=t;return r},O=function(e,r,t,n,a,o){var u,c,i;if(e<=0)return r;if((c=m(r)).accessors)return w(e,c,t,n,a,o),c.data;for(u=n,i=0;i<e;i++)r[u]=a.call(o,r[u],i,u,r),u+=t;return r};(function(e,r,t){_(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})})(h,"ndarray",O);var P=h;export{P as default,O as ndarray};
//# sourceMappingURL=mod.js.map
