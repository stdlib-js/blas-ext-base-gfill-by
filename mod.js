// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,c=o.__defineSetter__,u=o.__lookupGetter__,l=o.__lookupSetter__;function i(e,r){return e[r]}function f(e,r){return e.get(r)}function s(e,r,t){e[r]=t}function _(e,r,t){e.set(t,r)}function p(e){var r=Boolean(e.get&&e.set);return{data:e,accessors:r,getter:r?f:i,setter:r?_:s}}function d(e,r,t,o,n,a){var c,u,l,i,f;for(c=r.data,l=r.accessors[0],u=r.accessors[1],i=o,f=0;f<e;f++)u(c,i,n.call(a,l(c,i),f,i,r)),i+=t;return r}function b(e,r,t,o,n){var a,c,u;if(e<=0)return r;if(a=t<0?(1-e)*t:0,(c=p(r)).accessorProtocol)return d(e,c,t,a,o,n),c.data;for(u=0;u<e;u++)r[a]=o.call(n,r[a],u,a,r),a+=t;return r}function y(e,r,t,o,n,a){var c,u,l;if(e<=0)return r;if((u=p(r)).accessorProtocol)return d(e,u,t,o,n,a),u.data;for(c=o,l=0;l<e;l++)r[c]=n.call(a,r[c],l,c,r),c+=t;return r}r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var i,f,s,_;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(e,r)||l.call(e,r)?(i=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=i):e[r]=t.value),s="get"in t,_="set"in t,f&&(s||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return s&&a&&a.call(e,r,t.get),_&&c&&c.call(e,r,t.set),e},r(b,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:y});export{b as default,y as ndarray};
//# sourceMappingURL=mod.js.map
